version: "4.0"
services:
  # Service definition for app1
  app1:
    build:
      # Specify the Dockerfile location for building the image
      dockerfile: src/Dockerfile
    image: pr5
    ports:
      # Map container's port 8080 to host's port 8080
      - "8080:8080"
    restart: on-failure
    environment:
      # Set environment variable NAME_APP to "app1"
      - NAME_APP=app1
    volumes:
      # Mount the host's ../files directory to the container's /files directory
      - ../files:/files

  # Service definition for app2
  app2:
    build:
      dockerfile: src/Dockerfile
    image: pr5
    restart: on-failure
    environment:
      - NAME_APP=app2
    volumes:
      - ../files:/files

  # Service definition for app3
  app3:
    build:
      dockerfile: src/Dockerfile
    image: pr5
    restart: on-failure
    environment:
      - NAME_APP=app3
    volumes:
      - ../files:/files

  # Service definition for app4
  app4:
    build:
      dockerfile: src/Dockerfile
    image: pr5
    restart: on-failure
    environment:
      - NAME_APP=app4
    volumes:
      - ../files:/files

  # Service definition for the proxy using Nginx
  proxy:
    image: nginx:1.11
    ports:
      # Map container's port 80 to host's port 80
      - '80:80'
    volumes:
      # Mount the host's ./nginx.conf file to the container's /etc/nginx/conf.d/default.conf
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

#app1, app2, app3, app4:
#Определения сервисов для четырех экземпляров приложения (app1, app2, app3, app4).
#Каждый сервис использует собственный контейнер с образом pr5
#и настроенными параметрами для перезапуска и переменной окружения NAME_APP.
#proxy:

#Определение сервиса для проксирования с использованием Nginx (proxy).
#Сервис использует официальный образ Nginx версии 1.11.
#Порт 80 контейнера проксируется на порт 80 хоста.
#Монтируется конфигурационный файл Nginx с хоста в контейнер для настройки прокси.